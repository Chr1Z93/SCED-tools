local sealedTokens = {}
local guids = {}

function onSave()
  guids = {}
  for _, obj in ipairs(sealedTokens) do
    table.insert(guids, obj.getGUID())
  end
  return JSON.encode(guids)
end

function onLoad(savedData)
  if savedData and savedData ~= "" then
    guids = JSON.decode(savedData)
    for _, guid in ipairs(guids) do
      table.insert(sealedTokens, getObjectFromGUID(guid))
    end
  end
  updateMenu()
end

function updateMenu()
  self.clearContextMenu()
  if #sealedTokens ~= 0 then
    self.addContextMenuItem("Release tokens", releaseTokens)
  else
    self.addContextMenuItem("Seal tokens", sealTokens)
  end
end

function sealTokens(playerColor)
  local chaosbag = Global.call("findChaosBag")
  local chaosbagObjects = chaosbag.getObjects()
  local ultraBreak = false
  sealedTokens = {}

  for j = 1, 10 do
    local name = tostring(2 - j)
    if j == 1 then name = "+1" end

    for i, obj in ipairs(chaosbagObjects) do
      if obj.name == name then
        sealedTokens[1] = chaosbag.takeObject({
          position = self.getPosition() + Vector(0, 0.2, -0.4),
          rotation = self.getRotation(),
          index = i - 1,
          smooth = true
        })
        ultraBreak = true
        break
      end
    end
    if ultraBreak then break end
  end

  -- seal 2nd token
  chaosbagObjects = chaosbag.getObjects()
  ultraBreak = false
  for j = 1, 10 do
    local name = tostring(2 - j)
    if j == 1 then name = "+1" end

    for i, obj in ipairs(chaosbagObjects) do
      if obj.name == name then
        sealedTokens[2] = chaosbag.takeObject({
          position = self.getPosition() + Vector(0, 0.4, 0.4),
          rotation = self.getRotation(),
          index = i - 1,
          smooth = true
        })
        ultraBreak = true
        break
      end
    end
    if ultraBreak then break end
  end

  Wait.time(function() updateMenu() end, 0.1)
  if #sealedTokens ~= 2 then
    printToColor("Not enough number tokens found in bag", playerColor)
  end
end

function releaseTokens()
  local chaosbag = Global.call("findChaosBag")

  if sealedTokens == {} then return end
  chaosbag.putObject(sealedTokens[1])
  chaosbag.putObject(sealedTokens[2])
  sealedTokens = {}
  updateMenu()
end
